{"version":3,"file":"static/js/278.6087c41a.chunk.js","mappings":"sNAAO,IAAMA,EACX,6EAEWC,EAAiB,kCACjBC,EAAkB,mC,yGCFlBC,EAAW,SAACC,EAAWC,GAClC,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBJ,GAAW,GADQ,kBAGEN,IAHF,OAGXW,EAHW,OAKjBP,EAASO,GALQ,gDAOjBH,EAAS,KAAMI,SAPE,yBASjBN,GAAW,GATM,4EAAH,qDAYlBI,MAECT,GAEI,CAACE,EAAOE,EAASE,I,2JCtBbM,EAAOC,EAAAA,GAAAA,GAAH,sIAOJC,EAAOD,EAAAA,GAAAA,GAAH,2LAUJE,EAAQF,EAAAA,GAAAA,IAAH,+DAKLG,EAAgBH,EAAAA,GAAAA,IAAH,uJ,SCpBbI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,8BACGA,EAAQC,QACP,SAACP,EAAD,UACGM,EAAQE,KAAI,gBCPQC,EDOLC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAgBC,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,GAApC,OACX,UAACX,EAAD,YACE,uBAAIU,KACJ,UAACR,EAAD,YACE,SAACD,EAAD,CACEW,KCZaL,EDYQE,EAAeI,YCX/CN,EACDA,EAAOO,SAAP,SAA2CP,EAAOQ,MAAM,GAC3ChC,EAAAA,GAAqBwB,EAFR1B,EAAAA,IDYdmC,IAAKP,EAAeQ,YAEtB,uBAAIT,SAPGG,SAaf,8C,UEjBKO,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA+BnC,EAAAA,EAAAA,IAC7B,kBAAMqC,EAAAA,EAAAA,IAAkBF,KACxB,CAACA,IAFH,eAAOvB,EAAP,KAAaN,EAAb,KAAsBE,EAAtB,KAKA,OAAIF,GAAgB,SAACgC,EAAA,EAAD,IAChB9B,GAAc,wBAAKA,KAEhB,8BAAGI,IAAQ,SAACO,EAAD,CAAaC,QAASR,EAAK2B,c,yMCd/CC,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAmB,mCAAG,oGACVF,IAAAA,IAAU,uBADA,cAC3BG,EAD2B,yBAE1BA,EAAS/B,MAFiB,2CAAH,qDAKnBgC,EAAc,mCAAG,WAAMjB,GAAN,uFACLa,IAAAA,IAAA,iBAAoBb,IADf,cACtBgB,EADsB,yBAErBA,EAAS/B,MAFY,2CAAH,sDAKdiC,EAAS,mCAAG,WAAMlB,GAAN,uFACAa,IAAAA,IAAA,iBAAoBb,EAApB,aADA,cACjBgB,EADiB,yBAEhBA,EAAS/B,MAFO,2CAAH,sDAKTyB,EAAiB,mCAAG,WAAMV,GAAN,uFACRa,IAAAA,IAAA,iBAAoBb,EAApB,aADQ,cACzBgB,EADyB,yBAExBA,EAAS/B,MAFe,2CAAH,sDAKjBkC,EAAgB,mCAAG,WAAMC,GAAN,uFACPP,IAAAA,IAAA,gBAA2B,CAAEQ,OAAQ,CAAED,MAAAA,KADhC,cACxBJ,EADwB,yBAEvBA,EAAS/B,MAFc,2CAAH","sources":["constants/path.js","hooks/useFetch.js","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.jsx","utils/checkAvatarPath.js","pages/MovieDetailsPage/Reviews/Reviews.jsx","services/movieApi.js"],"sourcesContent":["export const NO_IMAGE =\n  'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg';\nexport const IMAGE_PATH_ORIGINAL = `https://image.tmdb.org/t/p/original`;\nexport const IMAGE_PATH_POSTER = `https://image.tmdb.org/t/p/w500`;\nexport const IMAGE_PATH_PROFILE = `https://image.tmdb.org/t/p/w185`;\n","import { useEffect, useState } from 'react';\n\nexport const useFetch = (requestFn, deps) => {\n  const [state, setState] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const asyncRequest = async () => {\n      setLoading(true);\n      try {\n        const data = await requestFn();\n        // console.log('useEffect', data);\n        setState(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    asyncRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  // console.log(state, 'after useEffect');\n  return [state, loading, error];\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  /* display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n  gap: 15px; */\n`;\n\nexport const Item = styled.li`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n  display: grid;\n  margin-bottom: 10px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const Image = styled.img`\n  width: 80px;\n  margin-right: 10px;\n`;\n\nexport const AuthorWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n  justify-content: flex-end;\n  /* justify-content: center;\n  align-items: center; */\n`;\n","import PropTypes from 'prop-types';\nimport { checkAvatarPath } from '../../utils';\nimport { Image, List, Item, AuthorWrapper } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length ? (\n        <List>\n          {reviews.map(({ author, author_details, content, id }) => (\n            <Item key={id}>\n              <p>{content}</p>\n              <AuthorWrapper>\n                <Image\n                  src={checkAvatarPath(author_details.avatar_path)}\n                  alt={author_details.username}\n                />\n                <p>{author}</p>\n              </AuthorWrapper>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>Nothing to show</p>\n      )}\n    </>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      author_details: PropTypes.shape({\n        avatar_path: PropTypes.string,\n        username: PropTypes.string.isRequired,\n      }),\n      content: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { IMAGE_PATH_PROFILE, NO_IMAGE } from '../constants';\n\nexport const checkAvatarPath = avatar => {\n  if (!avatar) return (avatar = NO_IMAGE);\n  if (avatar.includes(`https`)) return (avatar = avatar.slice(1));\n  return (avatar = IMAGE_PATH_PROFILE + avatar);\n};\n","import { useParams } from 'react-router-dom';\nimport { useFetch } from '../../../hooks';\nimport { fetchMovieReviews } from '../../../services/movieApi';\nimport { ReviewsList } from '../../../components/ReviewsList';\nimport { Loader } from '../../../components/ui/Loader';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [data, loading, error] = useFetch(\n    () => fetchMovieReviews(movieId),\n    [movieId]\n  );\n\n  if (loading) return <Loader />;\n  if (error) return <h1>{error}</h1>;\n\n  return <>{data && <ReviewsList reviews={data.results} />}</>;\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '5e25dc89cc9570e2f881766abec20685' };\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(`/search/movie`, { params: { query } });\n  return response.data;\n};\n"],"names":["NO_IMAGE","IMAGE_PATH_POSTER","IMAGE_PATH_PROFILE","useFetch","requestFn","deps","useState","state","setState","loading","setLoading","error","setError","useEffect","asyncRequest","data","message","List","styled","Item","Image","AuthorWrapper","ReviewsList","reviews","length","map","avatar","author","author_details","content","id","src","avatar_path","includes","slice","alt","username","Reviews","movieId","useParams","fetchMovieReviews","Loader","results","axios","api_key","fetchTrendingMovies","response","fetchMovieById","fetchCast","fetchSearchMovie","query","params"],"sourceRoot":""}