{"version":3,"file":"static/js/838.e1e11e65.chunk.js","mappings":"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","sources":["components/ui/GoBackButton/GoBackButton.styled.jsx","components/ui/GoBackButton/GoBackButton.jsx","constants/path.js","hooks/useFetch.js","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","utils/checkProfilePhoto.js","pages/MovieDetailsPage/Cast/Cast.jsx","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.jsx","utils/checkAvatarPath.js","pages/MovieDetailsPage/Reviews/Reviews.jsx","components/MovieDetailsInfo/MovieDetailsInfo.styled.jsx","components/MovieDetailsInfo/MovieDetailsInfo.jsx","utils/getGenres.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/movieApi.js","utils/checkPoster.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 40px;\n  height: 40px;\n\n  background-color: #f5f4fa;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\n\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 500;\n\n  text-align: center;\n  border-radius: 50%;\n  border: none;\n\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  color: black;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  margin-bottom: 10px;\n\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(77, 77, 77, 0.1);\n    color: red;\n  }\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Button } from './GoBackButton.styled';\nimport { IoReturnDownBack } from 'react-icons/io5';\n\nexport const GoBackButton = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [from, setFrom] = useState();\n\n  useEffect(() => {\n    if (location?.state?.from) {\n      setFrom(location?.state?.from);\n    }\n  }, [location?.state?.from]);\n\n  return (\n    <Button type=\"button\" onClick={() => navigate(from ?? '/')}>\n      <IoReturnDownBack size={30} />\n    </Button>\n  );\n};\n","export const NO_IMAGE =\n  'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg';\nexport const IMAGE_PATH_ORIGINAL = `https://image.tmdb.org/t/p/original`;\nexport const IMAGE_PATH_POSTER = `https://image.tmdb.org/t/p/w500`;\nexport const IMAGE_PATH_PROFILE = `https://image.tmdb.org/t/p/w185`;\n","import { useEffect, useState } from 'react';\n\nexport const useFetch = (requestFn, deps) => {\n  const [state, setState] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const asyncRequest = async () => {\n      setLoading(true);\n      try {\n        const data = await requestFn();\n        // console.log('useEffect', data);\n        setState(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    asyncRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  // console.log(state, 'after useEffect');\n  return [state, loading, error];\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n`;\nexport const Image = styled.img`\n  width: 80px;\n`;\n","import PropTypes from 'prop-types';\nimport { checkProfilePhoto } from '../../utils';\nimport { Image, List, Item } from './CastList.styled';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <>\n      {cast.length ? (\n        <List>\n          {cast.map(({ id, name, character, profile_path }) => {\n            return (\n              <Item key={id}>\n                <Image src={checkProfilePhoto(profile_path)} alt={name} />\n                <p>{name}</p>\n                <p>{character}</p>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <p>Nothing to show</p>\n      )}\n    </>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import { IMAGE_PATH_PROFILE, NO_IMAGE } from '../constants';\n\nexport const checkProfilePhoto = poster_path => {\n  return poster_path\n    ? (poster_path = IMAGE_PATH_PROFILE + poster_path)\n    : (poster_path = NO_IMAGE);\n};\n","import { useParams } from 'react-router-dom';\nimport { useFetch } from '../../../hooks';\nimport { CastList } from '../../../components/CastList/';\nimport { Loader } from '../../../components/ui/Loader';\nimport { fetchCast } from '../../../services/movieApi';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [data, loading, error] = useFetch(() => fetchCast(movieId), [movieId]);\n\n  if (loading) return <Loader />;\n  if (error) return <h1>{error}</h1>;\n\n  return <>{data && <CastList cast={data.cast}></CastList>}</>;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  /* display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n  gap: 15px; */\n`;\n\nexport const Item = styled.li`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n  display: grid;\n  margin-bottom: 10px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const Image = styled.img`\n  width: 80px;\n  margin-right: 10px;\n`;\n\nexport const AuthorWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n  justify-content: flex-end;\n  /* justify-content: center;\n  align-items: center; */\n`;\n","import PropTypes from 'prop-types';\nimport { checkAvatarPath } from '../../utils';\nimport { Image, List, Item, AuthorWrapper } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length ? (\n        <List>\n          {reviews.map(({ author, author_details, content, id }) => (\n            <Item key={id}>\n              <p>{content}</p>\n              <AuthorWrapper>\n                <Image\n                  src={checkAvatarPath(author_details.avatar_path)}\n                  alt={author_details.username}\n                />\n                <p>{author}</p>\n              </AuthorWrapper>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>Nothing to show</p>\n      )}\n    </>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      author_details: PropTypes.shape({\n        avatar_path: PropTypes.string,\n        username: PropTypes.string.isRequired,\n      }),\n      content: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { IMAGE_PATH_PROFILE, NO_IMAGE } from '../constants';\n\nexport const checkAvatarPath = avatar => {\n  if (!avatar) return (avatar = NO_IMAGE);\n  if (avatar.includes(`https`)) return (avatar = avatar.slice(1));\n  return (avatar = IMAGE_PATH_PROFILE + avatar);\n};\n","import { useParams } from 'react-router-dom';\nimport { useFetch } from '../../../hooks';\nimport { fetchMovieReviews } from '../../../services/movieApi';\nimport { ReviewsList } from '../../../components/ReviewsList';\nimport { Loader } from '../../../components/ui/Loader';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [data, loading, error] = useFetch(\n    () => fetchMovieReviews(movieId),\n    [movieId]\n  );\n\n  if (loading) return <Loader />;\n  if (error) return <h1>{error}</h1>;\n\n  return <>{data && <ReviewsList reviews={data.results} />}</>;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  color: black;\n  font-size: 20px;\n  margin-right: 10px;\n\n  :last-child {\n    margin-right: 0;\n  }\n\n  &.active {\n    color: red;\n    font-weight: 700;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  /* flex-direction: row;\n  align-items: flex-start; */\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n`;\n\nexport const PosterThumb = styled.div`\n  overflow-x: hidden;\n  border-radius: 5px;\n  min-width: 240px;\n  min-height: 357px;\n  margin-right: 20px;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.0666666667;\n  color: #000;\n  letter-spacing: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border: none;\n  text-align: left;\n  border-collapse: separate;\n  margin-bottom: 10px;\n`;\nexport const Head = styled.th`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.3333333333;\n  letter-spacing: 0;\n  padding-bottom: 8px;\n`;\n\nexport const Data = styled.td`\n  /* font-weight: 500; */\n  font-size: 15px;\n  line-height: 1.3333333333;\n  letter-spacing: 0;\n  padding-bottom: 8px;\n\n  color: #000;\n  /* padding-left: 50px; */\n`;\n\nexport const Rating = styled.span`\n  padding: 1px 10px;\n  color: #000;\n  background-color: #f7f7f7;\n  border-radius: 5px;\n\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.1666666667;\n  letter-spacing: 0;\n`;\nexport const RatingAccent = styled.span`\n  padding: 1px 10px;\n  color: #000;\n  background-color: #f7f7f7;\n  border-radius: 5px;\n\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.1666666667;\n  letter-spacing: 0;\n\n  color: #fff;\n  background-color: #ff6b08;\n`;\n\nexport const AboutSubtitle = styled.p`\n  font-weight: 500;\n  font-size: 15px;\n  color: #000;\n  letter-spacing: 0;\n  text-transform: uppercase;\n  line-height: 1.3333333333;\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.p`\n  line-height: 1.6666666667;\n  font-size: 15px;\n  color: #000;\n  letter-spacing: 0;\n`;\n\nexport const AdditionalSubtitle = styled.p`\n  font-weight: 500;\n  font-size: 17px;\n  color: #000;\n  letter-spacing: 0;\n  text-transform: uppercase;\n  line-height: 1.3333333333;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n// .details-popup {\n//   display: flex;\n//   flex-direction: column;\n\n//   @include breakpoint(tablet) {\n//     flex-direction: row;\n//     align-items: flex-start;\n//   }\n\n//   &__thumb {\n//     overflow-x: hidden;\n//     border-radius: 5px;\n//     min-width: 240px;\n//     min-height: 357px;\n\n//     @include breakpoint(tablet) {\n//       min-width: 264px;\n//       min-height: 370px;\n//     }\n\n//     @include breakpoint(desktop) {\n//       min-width: 375px;\n//       min-height: 470px;\n//       height: auto;\n//     }\n\n//     & img {\n//       // border-radius: 5px;\n//     }\n//   }\n\n//   &__info {\n//     margin-left: 0;\n//     margin-top: 20px;\n\n//     @include breakpoint(tablet) {\n//       margin-top: 0;\n//       margin-left: 20px;\n//       width: 350px;\n//     }\n\n//     @include breakpoint(desktop) {\n//       margin-left: 16px;\n//       width: 400px;\n//     }\n//   }\n\n//   &__block {\n//     margin-top: 20px;\n//   }\n\n//   &__menu {\n//     display: flex;\n//     align-items: center;\n//     // flex-wrap: wrap;\n//     margin-left: -15px;\n//     margin-top: 0px;\n//   }\n\n//   &__menu_item {\n//     margin-top: 15px;\n//     margin-left: 15px;\n//   }\n\n//   &__title {\n//     @include font(500, 20px, 22px);\n//     text-transform: uppercase;\n\n//     @include breakpoint(desktop) {\n//       @include font(500, 30px, 32px);\n//     }\n//   }\n\n//   &__subtitle {\n//     text-transform: uppercase;\n//     @include font(500, 12px, 16px);\n//   }\n\n//   &__description {\n//     @include font(500, 12px, 20px);\n//   }\n// }\n\n// .ranks-table {\n//   width: 100%;\n//   border: none;\n//   text-align: left;\n//   border-collapse: separate;\n\n//   &__head {\n//     @include font(500, 12px, 16px, #8c8c8c);\n//     padding-bottom: 8px;\n//   }\n\n//   &__cell {\n//     @include font(500, 12px, 16px);\n//     padding-left: 50px;\n//     padding-bottom: 8px;\n//   }\n// }\n\n// .details-popup__thumb {\n//   position: relative;\n// }\n","import PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\nimport { checkPoster, getGenres } from '../../utils';\nimport {\n  Wrapper,\n  Link,\n  Poster,\n  PosterThumb,\n  Details,\n  Title,\n  Table,\n  Head,\n  Data,\n  Rating,\n  RatingAccent,\n  AboutSubtitle,\n  AdditionalSubtitle,\n  Overview,\n} from './MovieDetailsInfo.styled';\n\nexport const MovieDetailsInfo = ({ movie }) => {\n  console.log(movie);\n  return (\n    <>\n      <Wrapper>\n        <PosterThumb>\n          <Poster src={checkPoster(movie.poster_path)} alt={movie.title} />\n        </PosterThumb>\n\n        <Details>\n          <Title>{movie.title}</Title>\n\n          <Table>\n            <tbody>\n              <tr>\n                <Head>Vote / Votes:</Head>\n                <Data>\n                  <Rating>{movie.vote_average}</Rating> /{' '}\n                  <RatingAccent>{movie.vote_count}</RatingAccent>\n                </Data>\n              </tr>\n              <tr>\n                <Head>Popularity:</Head>\n                <Data>{movie.popularity}</Data>\n              </tr>\n              <tr>\n                <Head>Original title</Head>\n                <Data>{movie.original_title}</Data>\n              </tr>\n              <tr>\n                <Head>Release:</Head>\n                <Data>{movie.release_date}</Data>\n              </tr>\n              <tr>\n                <Head>Genre:</Head>\n                <Data>\n                  {movie.genres ? getGenres(movie.genres) : 'No genres'}\n                </Data>\n              </tr>\n            </tbody>\n          </Table>\n\n          <AboutSubtitle>About</AboutSubtitle>\n          <Overview>{movie.overview}</Overview>\n        </Details>\n      </Wrapper>\n\n      <AdditionalSubtitle>Additional information</AdditionalSubtitle>\n      <Link to={`cast`}>Cast</Link>\n      <Link to={`reviews`}>Review</Link>\n      <Outlet />\n    </>\n  );\n};\n\nMovieDetailsInfo.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n    popularity: PropTypes.number,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n  }),\n};\n","export const getGenres = genres => genres.map(genre => genre.name).join(', ');\n","import { Route, Routes, useParams } from 'react-router-dom';\nimport { GoBackButton } from '../../components/ui/GoBackButton';\nimport { Loader } from '../../components/ui/Loader';\nimport { MovieDetailsInfo } from '../../components/MovieDetailsInfo';\nimport { useFetch } from '../../hooks';\nimport { fetchMovieById } from '../../services/movieApi';\nimport { Cast } from './Cast';\nimport { Reviews } from './Reviews';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n\n  const [movie, loading, error] = useFetch(\n    () => fetchMovieById(movieId),\n    [movieId]\n  );\n\n  if (error) return <h1>{error}</h1>;\n  if (loading) return <Loader />;\n\n  return (\n    <>\n      <GoBackButton />\n      {movie && <MovieDetailsInfo movie={movie} />}\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '5e25dc89cc9570e2f881766abec20685' };\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(`/search/movie`, { params: { query } });\n  return response.data;\n};\n","import { IMAGE_PATH_POSTER, NO_IMAGE } from '../constants';\n\nexport const checkPoster = poster_path => {\n  return poster_path\n    ? (poster_path = IMAGE_PATH_POSTER + poster_path)\n    : (poster_path = NO_IMAGE);\n};\n"],"names":["Button","styled","GoBackButton","location","useLocation","navigate","useNavigate","useState","from","setFrom","useEffect","state","type","onClick","size","NO_IMAGE","IMAGE_PATH_POSTER","IMAGE_PATH_PROFILE","useFetch","requestFn","deps","setState","loading","setLoading","error","setError","asyncRequest","data","message","List","Item","Image","CastList","cast","length","map","poster_path","id","name","character","profile_path","src","alt","Cast","movieId","useParams","fetchCast","Loader","AuthorWrapper","ReviewsList","reviews","avatar","author","author_details","content","avatar_path","includes","slice","username","Reviews","fetchMovieReviews","results","Link","NavLink","Wrapper","Poster","PosterThumb","Details","Title","Table","Head","Data","Rating","RatingAccent","AboutSubtitle","Overview","AdditionalSubtitle","MovieDetailsInfo","genres","movie","console","log","checkPoster","title","vote_average","vote_count","popularity","original_title","release_date","genre","join","overview","to","MovieDetailsPage","fetchMovieById","path","element","axios","api_key","fetchTrendingMovies","response","fetchSearchMovie","query","params"],"sourceRoot":""}