{"version":3,"file":"static/js/999.cb552c3f.chunk.js","mappings":"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","sources":["components/ui/Loader/Loader.jsx","constants/path.js","components/SearchForm/SearchForm.jsx","components/SearchGallery/SearchGallery.styled.jsx","components/SearchGallery/SearchGallery.jsx","pages/MoviesPage/MoviesPage.jsx","services/movieApi.js","utils/checkPoster.js"],"sourcesContent":["import ClipLoader from 'react-spinners/ClipLoader';\n\nexport const Loader = () => (\n  <ClipLoader\n    size={70}\n    css={`\n      display: block;\n      margin: 0 auto;\n      border-color: #0099ff;\n    `}\n  />\n);\n","export const NO_IMAGE =\n  'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg';\nexport const IMAGE_PATH_ORIGINAL = `https://image.tmdb.org/t/p/original`;\nexport const IMAGE_PATH_POSTER = `https://image.tmdb.org/t/p/w500`;\nexport const IMAGE_PATH_PROFILE = `https://image.tmdb.org/t/p/w185`;\n","import { useState } from 'react';\n\nexport const SearchForm = ({ onQuery, onSearch }) => {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onQuery(input);\n    onSearch({ query: input });\n  };\n\n  return (\n    <>\n      <form action=\"\">\n        <input\n          name=\"search\"\n          type=\"text\"\n          value={input}\n          onChange={e => setInput(e.target.value.trim())}\n        />\n        <button type=\"submit\" onClick={handleSubmit}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 20px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { checkPoster } from '../../utils';\nimport { List } from './SearchGallery.styled';\n\nexport const SearchGallery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ original_title, id, poster_path }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <img src={checkPoster(poster_path)} alt={movies.title}></img>\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n    </List>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/movieApi';\nimport { Loader } from '../../components/ui/Loader';\nimport { SearchForm } from '../../components/SearchForm';\nimport { SearchGallery } from '../../components/SearchGallery';\n\nexport const MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useSearchParams();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getData = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchSearchMovie(query);\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [query]);\n\n  useEffect(() => {\n    if (!search.get('query')) return;\n\n    const getData = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchSearchMovie(search.get('query'));\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, [search]);\n\n  if (error) {\n    return <h1>{error}</h1>;\n  }\n\n  return (\n    <>\n      <SearchForm onQuery={setQuery} onSearch={setSearch} />\n      {loading ? <Loader /> : movies && <SearchGallery movies={movies} />}\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '5e25dc89cc9570e2f881766abec20685' };\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(`/search/movie`, { params: { query } });\n  return response.data;\n};\n","import { IMAGE_PATH_POSTER, NO_IMAGE } from '../constants';\n\nexport const checkPoster = poster_path => {\n  return poster_path\n    ? (poster_path = IMAGE_PATH_POSTER + poster_path)\n    : (poster_path = NO_IMAGE);\n};\n"],"names":["Loader","size","css","NO_IMAGE","IMAGE_PATH_POSTER","IMAGE_PATH_PROFILE","SearchForm","onQuery","onSearch","useState","input","setInput","action","name","type","value","onChange","e","target","trim","onClick","preventDefault","query","List","styled","SearchGallery","movies","location","useLocation","map","original_title","id","poster_path","to","state","from","src","checkPoster","alt","title","MoviesPage","setQuery","useSearchParams","search","setSearch","setMovies","loading","setLoading","error","setError","useEffect","getData","fetchSearchMovie","results","message","get","axios","api_key","fetchTrendingMovies","response","data","fetchMovieById","fetchCast","fetchMovieReviews","params"],"sourceRoot":""}